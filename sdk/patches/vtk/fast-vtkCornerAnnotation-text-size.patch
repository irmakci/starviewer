diff --git a/Rendering/Annotation/vtkCornerAnnotation.cxx b/Rendering/Annotation/vtkCornerAnnotation.cxx
index d4bca8b..f908945 100644
--- a/Rendering/Annotation/vtkCornerAnnotation.cxx
+++ b/Rendering/Annotation/vtkCornerAnnotation.cxx
@@ -500,98 +500,15 @@ int vtkCornerAnnotation::RenderOpaqueGeometry(vtkViewport *viewport)
         return 0;
       }
 
-      int height_02 = tempi[1] + tempi[5];  // total height of text in left top/bottom corners
-      int height_13 = tempi[3] + tempi[7];  // total height of text in right top/bottom corners
-      int height_47 = tempi[9] + tempi[15]; // total height of text at center of top/bottom edges
-
-      int width_01 = tempi[0] + tempi[2];   // total width of text on bottom left/right corners
-      int width_23 = tempi[4] + tempi[6];   // total width of text on top left/right corners
-      int width_56 = tempi[10] + tempi[12]; // total width of text at center of left/right edges
-
-      int max_width_corners = (width_01 > width_23) ? width_01 : width_23;
-      int max_width         = (width_56 > max_width_corners) ? width_56 : max_width_corners;
-
-      int num_lines_02 = GetNumberOfLines(this->TextMapper[0]->GetInput())
-          + GetNumberOfLines(this->TextMapper[2]->GetInput());
-
-      int num_lines_13 = GetNumberOfLines(this->TextMapper[1]->GetInput())
-          + GetNumberOfLines(this->TextMapper[3]->GetInput());
-
-      int num_lines_47 = GetNumberOfLines(this->TextMapper[4]->GetInput())
-          + GetNumberOfLines(this->TextMapper[7]->GetInput());
-
-      int line_max_02 = (int)(vSize[1] * this->MaximumLineHeight) *
-        (num_lines_02 ? num_lines_02 : 1);
-
-      int line_max_13 = (int)(vSize[1] * this->MaximumLineHeight) *
-        (num_lines_13 ? num_lines_13 : 1);
-
-      int line_max_47 = (int)(vSize[1] * this->MaximumLineHeight) *
-        (num_lines_47 ? num_lines_47 : 1);
-
-      // Target size is to use 90% of x and y
+      // Target size is that each mapper uses 50% of x and y
 
       int tSize[2];
-      tSize[0] = (int)(0.9*vSize[0]);
-      tSize[1] = (int)(0.9*vSize[1]);
-
-      // While the size is too small increase it
-
-      while (height_02 < tSize[1] &&
-             height_13 < tSize[1] &&
-             height_47 < tSize[1] &&
-             max_width < tSize[0] &&
-             height_02 < line_max_02 &&
-             height_13 < line_max_13 &&
-             height_47 < line_max_47 &&
-             fontSize < 100)
-      {
-        fontSize++;
-        for (int i = 0; i < NumTextPositions; i++)
-        {
-          this->TextMapper[i]->GetTextProperty()->SetFontSize(fontSize);
-          this->TextMapper[i]->GetSize(viewport, tempi + i * 2);
-        }
-        height_02 = tempi[1] + tempi[5];
-        height_13 = tempi[3] + tempi[7];
-        height_47 = tempi[9] + tempi[15];
-
-        width_01 = tempi[0] + tempi[2];
-        width_23 = tempi[4] + tempi[6];
-        width_56 = tempi[10] + tempi[12];
-
-        max_width_corners = (width_01 > width_23) ? width_01 : width_23;
-        max_width         = (width_56 > max_width_corners) ? width_56 : max_width_corners;
-      }
 
-      // While the size is too large decrease it
+      tSize[0] = (int)(0.5*vSize[0]);
+      tSize[1] = (int)(0.5*vSize[1]);
 
-      while ((height_02 > tSize[1] ||
-              height_13 > tSize[1] ||
-              height_47 > tSize[1] ||
-              max_width > tSize[0] ||
-              height_02 > line_max_02 ||
-              height_13 > line_max_13 ||
-              height_47 > line_max_47) &&
-             fontSize > 0)
-      {
-        fontSize--;
-        for (int i = 0; i < NumTextPositions; i++)
-        {
-          this->TextMapper[i]->GetTextProperty()->SetFontSize(fontSize);
-          this->TextMapper[i]->GetSize(viewport, tempi + i * 2);
-        }
-        height_02 = tempi[1] + tempi[5];
-        height_13 = tempi[3] + tempi[7];
-        height_47 = tempi[9] + tempi[15];
-
-        width_01 = tempi[0] + tempi[2];
-        width_23 = tempi[4] + tempi[6];
-        width_56 = tempi[10] + tempi[12];
-
-        max_width_corners = (width_01 > width_23) ? width_01 : width_23;
-        max_width         = (width_56 > max_width_corners) ? width_56 : max_width_corners;
-      }
+      int maxSize[2];
+      fontSize = vtkTextMapper::SetMultipleConstrainedFontSize(viewport, tSize[0], tSize[1], this->TextMapper, NumTextPositions, maxSize);
 
       fontSize = static_cast<int>(pow((double)fontSize,
               NonlinearFontScaleFactor)*LinearFontScaleFactor);
